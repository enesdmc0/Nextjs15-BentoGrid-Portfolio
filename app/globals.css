@tailwind base;
@tailwind components;
@tailwind utilities;

.scrollbar-hide::-webkit-scrollbar {
  width: 0px;
  height: 0px;
}

.mask {
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 0),
    rgba(0, 0, 0, 1) 20%,
    rgba(0, 0, 0, 1) 80%,
    rgba(0, 0, 0, 0)
  );
}

@keyframes scrollLeft {
  to {
    left: -200px;
  }
}

/* #e11d48 */
.itemLeft {
  animation-timing-function: linear;
  animation-duration: 30s;
  animation-iteration-count: infinite;
}

.itemLeft {
  left: max(calc(120px * 20), 100%);
  animation-name: scrollLeft;
}

.item1 {
  animation-delay: calc(30s / 20 * (20 - 1) * -1);
}

.item2 {
  animation-delay: calc(30s / 20 * (20 - 2) * -1);
}

.item3 {
  animation-delay: calc(30s / 20 * (20 - 3) * -1);
}

.item4 {
  animation-delay: calc(30s / 20 * (20 - 4) * -1);
}

.item5 {
  animation-delay: calc(30s / 20 * (20 - 5) * -1);
}

.item6 {
  animation-delay: calc(30s / 20 * (20 - 6) * -1);
}

.item7 {
  animation-delay: calc(30s / 20 * (20 - 7) * -1);
}

.item8 {
  animation-delay: calc(30s / 20 * (20 - 8) * -1);
}

.item9 {
  animation-delay: calc(30s / 20 * (20 - 9) * -1);
}

.item10 {
  animation-delay: calc(30s / 20 * (20 - 10) * -1);
}

.item11 {
  animation-delay: calc(30s / 20 * (20 - 11) * -1);
}

.item12 {
  animation-delay: calc(30s / 20 * (20 - 12) * -1);
}

.item13 {
  animation-delay: calc(30s / 20 * (20 - 13) * -1);
}

.item14 {
  animation-delay: calc(30s / 20 * (20 - 14) * -1);
}

.item15 {
  animation-delay: calc(30s / 20 * (20 - 15) * -1);
}

.item16 {
  animation-delay: calc(30s / 20 * (20 - 16) * -1);
}

.item17 {
  animation-delay: calc(30s / 20 * (20 - 17) * -1);
}

.item18 {
  animation-delay: calc(30s / 20 * (20 - 18) * -1);
}

.item19 {
  animation-delay: calc(30s / 20 * (20 - 19) * -1);
}

.item20 {
  animation-delay: calc(30s / 20 * (20 - 20) * -1);
}
